import { IState, IUser } from './UserContext';

export enum Action {
    LOGIN_SUCCESS = 'LOGIN_SUCCESS',
    LOGIN_FAIL = 'LOGIN_FAIL',
    REGISTRATION_SUCCESS = 'SIGNUP_SUCCESS',
    REGISTRATION_FAIL = 'SIGNUP_FAIL',
    ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS',
    ACTIVATION_FAIL = 'ACTIVATION_FAIL',
    USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS',
    USER_LOADED_FAIL = 'USER_LOADED_FAIL',
    AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS',
    AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL',
    PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL',
    PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS',
    PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL',
    PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS',
    LOGOUT = 'LOGOUT',
}

interface IPayload extends IState {
  errMessage?: string
  user?: IUser
  detail?: string
}

export interface IAction {
    type: Action
    payload?: IPayload
}